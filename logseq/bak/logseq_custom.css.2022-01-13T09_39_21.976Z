{
    :journal-basis "daily" 
   
    :project {
              ;; Selected public notes can be published to https://logseq.com/your-project-or-your-username.
              :name "Bryan Jenks"
              :alias "TallGuyJenks"
              ;; your twitter handle
              :twitter "tallguyjenks"
              ;; description supports both hiccup and html
              :description "Neurons imitating silicon and lightning."}
    ;; Currently, we support either "Markdown" or "Org".
    ;; This can overwrite your global preference so that
    ;; maybe your personal preferred format is Org but you'd
    ;; need to use Markdown for some projects.
    ;; :preferred-format ""
    
    ;; Preferred workflow style. 
    ;; Value is either ":now" for NOW/LATER style,
    ;; or ":todo" for TODO/DOING style.
    :preferred-workflow :todo
   
    ;; Git settings
    :git-pull-secs 1800
    :git-push-secs 3600
    :git-auto-push true
   
    ;; The app will ignore those directories or files.
    ;; E.g. "/archived" "/test.md"
    :hidden []
    
    ;; When creating the new journal page, the app will use your template content here.
    ;; Example for Markdown users: "## [[Work]]\n###\n## [[Family]]\n###\n
    ;; Example for Org mode users: "** [[Work]]\n***\n** [[Family]]\n***\n
    :default-templates
    {:journals ""}
   
    ;; The app will show those queries in today's journal page,
    ;; the "NOW" query asks the tasks which need to be finished "now",
    ;; the "NEXT" query asks the future tasks.
    :default-queries
    {:journals
     [{:title "ðŸ”¨ DOING"
       :query [:find (pull ?h [*])
               :in $ ?start ?today
               :where
               [?h :block/marker ?marker]
               [?h :block/page ?p]
               [?p :page/journal? true]
               [?p :page/journal-day ?d]
               [(>= ?d ?start)]
               [(<= ?d ?today)]
               [(contains? #{"NOW" "DOING"} ?marker)]]
       :inputs [:14d :today]
       :result-transform (fn [result]
                           (sort-by (fn [h]
                                      (get h :block/priority "Z")) result))
       :collapsed? false}
      {:title "ðŸ“… NEXT"
       :query [:find (pull ?h [*])
               :in $ ?start ?next
               :where
               [?h :block/marker ?marker]
               [?h :block/ref-pages ?p]
               [?p :page/journal? true]
               [?p :page/journal-day ?d]
               [(> ?d ?start)]
               [(< ?d ?next)]
               [(contains? #{"NOW" "LATER" "TODO"} ?marker)]]
       :inputs [:today :7d-after]
       :collapsed? false}]}
   
    ;; Add your own commands to speedup.
    ;; E.g. [["js" "Javascript"]]
    :commands
    [
     ["py" "```python\n\n```"],
     ["code" "```\n\n```"],
     ["pytodo" "TODO [[Python]] "],
     ["pydone" "DONE [[Python]] "],
     ["pylater" "LATER [[Python]] "],
     ["pynow" "NOW [[Python]] "],
     ["macro" "{{{hl }}}"],
    ]
   
    ;; Macros replace texts and will make you more productive.
    ;; For example:
    ;; Add this to the macros below:
    ;; {"poem" "Rose is $1, violet's $2. Life's ordered: Org assists you."}
    ;; input "{{{poem red,blue}}}"
    ;; becomes
    ;; Rose is red, violet's blue. Life's ordered: Org assists you.
    :macros
    {
     "poem" "Rose is $1, violet's $2. Life's ordered: Org assists you."
     "hlr" "<mark class='red'>$1</mark>"
     "hlo" "<mark class='orange'>$1</mark>"
     "hly" "<mark class='yellow'>$1</mark>"
     "hlg" "<mark class='green'>$1</mark>"
     "hlc" "<mark class='cyan'>$1</mark>"
     "hlb" "<mark class='blue'>$1</mark>"
     "hlp" "<mark class='purple'>$1</mark>"
     "hlk" "<mark class='pink'>$1</mark>"
    }
    :ui/show-brackets? true
    :date-formatter "yyyy-MM-dd"
    :all-pages-public? true
    :markdown/version 2
    
   ;; :default-home {:page "Python"}
   :sidebar ["Contents" "Recent" "TODO" "DOING" "DONE" "Page graph" "Help"]
    
    }